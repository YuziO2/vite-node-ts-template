#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

if ! type node >/dev/null 2>&1; then
        #echo 'node 未安装'
        if [ -d "$HOME/.nvm" ]; then
                #echo "有.nvm这个目录"

                export NVM_DIR="$HOME/.nvm"
                [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

                matchNvmUseNodeVersion=$(nvm current)
                if [ "$matchNvmUseNodeVersion" == "none" ]; then
                        # echo "没有找到NVM设置的Node版本,请执行nvm install --lts"
                        exit 1
                else
                        # echo "检测到nvm设置了有效的Node版本: $matchNvmUseNodeVersion"
                        export PATH="$NVM_DIR/versions/node/$matchNvmUseNodeVersion/bin:$PATH"
                fi
        elif type fnm >/dev/null 2>&1; then
                eval "$(fnm env --use-on-cd)" #适配fnm
        fi
fi

echo '🏗️👷 Styling, testing and building your project before committing'

# Check Prettier standards
npm run format ||
(
        echo 'Prettier Check Failed. Run npm run format, add changes and try commit again.';
        false;
)

# Check ESLint Standards
npm run lint ||
(
        echo 'ESLint Check Failed. Make the required changes listed above, add changes and try to commit again.'
        false; 
)

# Check tsconfig standards
# npm run check-types ||
# (
#      echo '🤡😂❌🤡 Failed Type check. 🤡😂❌🤡
#              Are you seriously trying to write that? Make the changes required above.'
#      false;
# )

# If everything passes... Now we can commit
# echo '🤔🤔🤔🤔... Alright... Code looks good to me... Trying to build now. 🤔🤔🤔🤔'

# pnpm run build ||
# (
#     echo '❌👷🔨❌ Better call Bob... Because your build failed ❌👷🔨❌
#             Next build failed: View the errors above to see why. 
#     '
#     false;
# )

# If everything passes... Now we can commit
echo '✅✅✅✅ You win this time... I am committing this now. ✅✅✅✅'
